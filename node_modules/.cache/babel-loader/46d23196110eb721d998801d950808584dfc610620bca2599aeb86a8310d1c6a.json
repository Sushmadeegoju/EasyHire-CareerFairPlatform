{"ast":null,"code":"var _jsxFileName = \"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Recruiterform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-use-history';\nimport '../css/Candidateform.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recruiterform() {\n  _s();\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    companyName: ''\n  });\n  useEffect(() => {\n    // You can perform actions after the state has been updated, for instance:\n    console.log('Form data has been cleared:', formData);\n  }, [formData]); // Watching for changes in formData\n\n  const [errors, setErrors] = useState({});\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  //   const handleFileChange = (event) => {\n  //     const file = event.target.files[0];\n  //     if (file && file.type === 'application/pdf') {\n  //       setFormData({ ...formData, resume: file });\n  //       setErrors({ ...errors, resume: null });\n  //     } else {\n  //       setErrors({ ...errors, resume: 'Only PDF files are allowed.' });\n  //     }\n  //   };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n    if (!formData.firstName) tempErrors.firstName = 'First name is required.';\n    if (!formData.lastName) tempErrors.lastName = 'Last name is required.';\n    if (!formData.email.includes('@')) tempErrors.email = 'Email is invalid.';\n    if (formData.password.length < 8) tempErrors.password = 'Password should be at least 8 characters.';\n    if (formData.password !== formData.confirmPassword) tempErrors.confirmPassword = 'Passwords do not match.';\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const postFormData = async formData => {\n    // const firstName = formData.firstName;\n    console.log(\"formData: \" + formData);\n    // JSON.stringify(formData);\n\n    try {\n      const dataToSend = {\n        ...formData,\n        designation: \"recruiter\"\n      };\n      const response = await fetch('/addRecruiter', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      if (response.ok) {\n        alert(`Registration Successful`);\n      } else {\n        const errorMessage = await response.json();\n        alert(`Error: ${errorMessage[\"error\"]}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error}`);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log('Form data submitted:', formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        await postFormData(formData);\n        console.log('Form data submitted:', formData);\n        // Clear the form\n        setFormData({\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          companyName: ''\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {\n          submissionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submission-status\",\n            children: submissionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 30\n          }, this);\n        }\n        history.push('/login');\n        // Process your form data here (e.g., send to an API)\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"Email ID\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Re-enter Password\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.confirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"companyName\",\n      name: \"companyName\",\n      placeholder: \"Company Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.confirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Recruiterform, \"pkdHGD8MH8UJAh1938JDgrjNxWw=\", false, function () {\n  return [useHistory];\n});\n_c = Recruiterform;\nexport default Recruiterform;\nvar _c;\n$RefreshReg$(_c, \"Recruiterform\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","jsxDEV","_jsxDEV","Recruiterform","_s","history","formData","setFormData","firstName","lastName","email","password","confirmPassword","companyName","console","log","errors","setErrors","handleInputChange","event","name","value","target","submissionStatus","setSubmissionStatus","validateForm","tempErrors","includes","length","Object","keys","postFormData","dataToSend","designation","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorMessage","json","error","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","push","onSubmit","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Recruiterform.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-use-history';\nimport '../css/Candidateform.css';\n\nfunction Recruiterform() {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    companyName: '',\n  });\n\n  useEffect(() => {\n    // You can perform actions after the state has been updated, for instance:\n    console.log('Form data has been cleared:', formData);\n  }, [formData]); // Watching for changes in formData\n\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type === 'application/pdf') {\n//       setFormData({ ...formData, resume: file });\n//       setErrors({ ...errors, resume: null });\n//     } else {\n//       setErrors({ ...errors, resume: 'Only PDF files are allowed.' });\n//     }\n//   };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n\n    \n    if (!formData.firstName) tempErrors.firstName = 'First name is required.';\n    if (!formData.lastName) tempErrors.lastName = 'Last name is required.';\n    if (!formData.email.includes('@')) tempErrors.email = 'Email is invalid.';\n    if (formData.password.length < 8) tempErrors.password = 'Password should be at least 8 characters.';\n    if (formData.password !== formData.confirmPassword) tempErrors.confirmPassword = 'Passwords do not match.';\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const postFormData = async (formData) => {\n    // const firstName = formData.firstName;\n    console.log(\"formData: \" + formData);\n    // JSON.stringify(formData);\n\n    try {\n      const dataToSend = { ...formData, designation: \"recruiter\" };\n        const response = await fetch('/addRecruiter', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( dataToSend )\n        });\n\n        if (response.ok) {\n            alert(`Registration Successful`);\n        } else {\n            const errorMessage = await response.json();\n            alert(`Error: ${errorMessage[\"error\"]}`);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert(`Error: ${error}`);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log('Form data submitted:', formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        await postFormData(formData);\n        console.log('Form data submitted:', formData);\n        // Clear the form\n        setFormData({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            companyName:'',\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {submissionStatus && <div className=\"submission-status\">{submissionStatus}</div>}\n        history.push('/login'); \n        // Process your form data here (e.g., send to an API)\n        \n        \n    }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"firstName\" placeholder=\"First Name\" onChange={handleInputChange} />\n      {errors.firstName && <div>{errors.firstName}</div>}\n\n      <input name=\"lastName\" placeholder=\"Last Name\" onChange={handleInputChange} />\n      {errors.lastName && <div>{errors.lastName}</div>}\n\n      <input name=\"email\" placeholder=\"Email ID\" onChange={handleInputChange} />\n      {errors.email && <div>{errors.email}</div>}\n\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleInputChange} />\n      {errors.password && <div>{errors.password}</div>}\n\n      <input type=\"password\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" onChange={handleInputChange} />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n      <input type=\"companyName\" name=\"companyName\" placeholder=\"Company Name\" onChange={handleInputChange} />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n\n      {/* <input name=\"degree\" placeholder=\"Degree\" onChange={handleInputChange} /> */}\n\n      {/* <textarea name=\"workExperience\" placeholder=\"Work Experience (if any)\" onChange={handleInputChange}></textarea> */}\n\n      {/* <input type=\"file\" onChange={handleFileChange} />\n      {errors.resume && <div>{errors.resume}</div>} */}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default Recruiterform;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}