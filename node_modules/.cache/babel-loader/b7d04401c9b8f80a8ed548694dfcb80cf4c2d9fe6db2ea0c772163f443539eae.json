{"ast":null,"code":"var _jsxFileName = \"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/forgotPassword.css\"; // Add your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Implement the logic to send the email to your backend\n    try {\n      const response = await fetch(\"/request-password-reset\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        // Handle successful response\n        alert(\"Please check your email for password reset instructions.\");\n        navigate(\"/login\"); // Navigate back to the login page or a confirmation page\n      } else {\n        // Handle errors\n        const error = await response.json();\n        console.log(\"email not found! \" + error);\n        alert(`Email not found!!!`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while requesting a password reset.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"BtHh1nUgD6Q6OqHFh/Muz7TKLH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/forgotPassword.css\"; // Add your CSS file for styling\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Implement the logic to send the email to your backend\n    try {\n      const response = await fetch(\"/request-password-reset\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (response.ok) {\n        // Handle successful response\n        alert(\"Please check your email for password reset instructions.\");\n        navigate(\"/login\"); // Navigate back to the login page or a confirmation page\n      } else {\n        // Handle errors\n        const error = await response.json();\n        console.log(\"email not found! \" + error);\n        alert(`Email not found!!!`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while requesting a password reset.\");\n    }\n  };\n\n  return (\n    <div className=\"forgot-password-container\">\n      <div className=\"forgot-password-card\">\n        <h2>Reset Your Password</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default ForgotPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACO,EAAE,EAAE;QACf;QACAC,KAAK,CAAC,0DAA0D,CAAC;QACjEZ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACL;QACA,MAAMa,KAAK,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGH,KAAK,CAAC;QACxCD,KAAK,CAAE,oBAAmB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BD,KAAK,CAAC,sDAAsD,CAAC;IAC/D;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKsB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCvB,OAAA;MAAKsB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCvB,OAAA;QAAAuB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B3B,OAAA;QAAM4B,QAAQ,EAAEtB,YAAa;QAAAiB,QAAA,gBAC3BvB,OAAA;UACE6B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE3B,KAAM;UACb4B,QAAQ,EAAGC,CAAC,IAAK5B,QAAQ,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACF3B,OAAA;UAAQ6B,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CAjDQD,cAAc;EAAA,QAEJH,WAAW;AAAA;AAAAsC,EAAA,GAFrBnC,cAAc;AAkDvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}