[{"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/index.js":"1","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/tests/reportWebVitals.js":"2","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/App.js":"3","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/login.js":"4","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Fairs.js":"5","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Blog.js":"6","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Register.js":"7","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Home.js":"8","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/recruiterLanding.js":"9","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/jobseekerLanding.js":"10","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/EventHostDashboard.js":"11","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/RecruiterMeetings.js":"12","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/ForgotPassword.js":"13","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/JobseekerMeetings.js":"14","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Candidateform.js":"15","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Recruiterform.js":"16","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/SponsorDetails.js":"17","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/SponsorsList.js":"18"},{"size":638,"mtime":1700942565741,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1699373907813,"results":"21","hashOfConfig":"20"},{"size":8891,"mtime":1701368946859,"results":"22","hashOfConfig":"20"},{"size":2856,"mtime":1701361910553,"results":"23","hashOfConfig":"20"},{"size":265,"mtime":1699373907811,"results":"24","hashOfConfig":"20"},{"size":272,"mtime":1699373907811,"results":"25","hashOfConfig":"20"},{"size":1152,"mtime":1699373907812,"results":"26","hashOfConfig":"20"},{"size":908,"mtime":1701063251844,"results":"27","hashOfConfig":"20"},{"size":5874,"mtime":1701368917736,"results":"28","hashOfConfig":"20"},{"size":1623,"mtime":1701361910553,"results":"29","hashOfConfig":"20"},{"size":5670,"mtime":1701361910551,"results":"30","hashOfConfig":"20"},{"size":2310,"mtime":1701361910552,"results":"31","hashOfConfig":"20"},{"size":1672,"mtime":1701121756248,"results":"32","hashOfConfig":"20"},{"size":2359,"mtime":1701361910552,"results":"33","hashOfConfig":"20"},{"size":5534,"mtime":1700942565735,"results":"34","hashOfConfig":"20"},{"size":4944,"mtime":1700597008470,"results":"35","hashOfConfig":"20"},{"size":6500,"mtime":1701361910553,"results":"36","hashOfConfig":"20"},{"size":1220,"mtime":1701063251845,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10dz4q7",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/index.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/tests/reportWebVitals.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/App.js",["101","102","103","104","105","106","107"],[],"import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./login\";\nimport \"../css/App.css\";\nimport Blog from \"./Blog\";\nimport Fairs from \"./Fairs\";\nimport Register from \"./Register\";\nimport RecruiterLanding from \"./recruiterLanding\";\nimport JobseekerLanding from \"./jobseekerLanding\";\nimport EventHostDashboard from './EventHostDashboard';\nimport ForgotPassword from \"./ForgotPassword\";\nimport RecruiterMeetings from \"./RecruiterMeetings\";\nimport JobSeekerMeetings from \"./JobseekerMeetings\";\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst ITEM_HEIGHT = 48;\n\nfunction App() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (option) => { \n    setAnchorEl(null);\n      switch (option) {\n        case 'My Dashboard':\n            if(designation == 'jobSeeker')\n              navigate('/jobSeekerMeetings'); \n            else if(designation == 'recruiter') \n              navigate('/recruiterMeetings');// Adjust the route as needed\n            break;\n        case 'View Companies':\n          navigate('/companies'); // Adjust the route as needed\n          break;\n        case 'View Candidates':\n          navigate('/jobSeekers'); // Adjust the route as needed\n          break;\n        case 'Logout':\n          handleLogout();\n          console.log(\"Logged out\");\n          navigate('/login');\n          break;\n        default:\n          break;\n      }\n  };\n  const storedUserEmail = localStorage.getItem('userEmail');\n  const [userEmail, setUserEmail] = useState(storedUserEmail || '');\n  const storedUserName = localStorage.getItem('userName');\n  const [userName, setUserName] = useState(storedUserName || '');\n  const storedUserPassword = localStorage.getItem('userPassword');\n  const [userPassword, setUserPassword] = useState(storedUserPassword || '');\n  const storedUserId= localStorage.getItem('userId');\n  const [userId, setUserId] = useState(storedUserId || '');\n\n  const storedLoggedInState = localStorage.getItem('isLoggedIn');\n  const [isLoggedIn, setIsLoggedIn] = useState(storedLoggedInState === 'true');\n  const storedDesignationState = localStorage.getItem('designation');\n  const [designation, setDesignation] = useState(storedDesignationState || '');\n\n  const [options, setOptions] = useState(() => {\n    if (designation == 'jobSeeker') {\n      return ['My Dashboard', 'View Companies', 'Logout'];\n    } else if (designation == 'recruiter') {\n      return ['My Dashboard', 'View Candidates', 'Logout'];\n    } else {\n      return ['Logout'];\n    }\n  });\n\n  // ... (other state variables)\n\n  useEffect(() => {\n    // Fetch the designation and other user details\n    if (window.location.pathname === '/') {\n      // If it is, set isLoggedIn to false\n      setIsLoggedIn(false);\n      localStorage.setItem('isLoggedIn', 'false');\n    }\n  },[]);\n\n  \n\n  useEffect(() => {\n    // Update options state when designation changes\n    if (designation == 'jobSeeker') {\n      setOptions(['My Dashboard', 'View Companies', 'Logout']);\n    } else if (designation == 'recruiter') {\n      setOptions(['My Dashboard', 'View Candidates', 'Logout']);\n    } else {\n      setOptions(['Logout']);\n    }\n  }, [designation]);\n\n  \n  const handleLogin = (user) => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true');\n    setDesignation(user.designation);\n    localStorage.setItem('designation', user.designation); // Corrected this line\n    setUserEmail(user.email);\n    localStorage.setItem('userEmail', user.email);\n    setUserName(user.firstName);\n    localStorage.setItem('userName', user.firstName);\n    setUserPassword(user.password);\n    localStorage.setItem('userPassword', user.password); \n    setUserId(user._id);\n    localStorage.setItem('userId', user._id);\n    // setUserId(user.timeSlots);\n    // localStorage.setItem('userId', user._id);\n    // setUserId(user._id);\n    // localStorage.setItem('userId', user._id);\n    // Corrected this line\n    if (user.designation === 'jobSeeker') {\n      setOptions(['My Dashboard', 'View Companies', 'Logout']);\n    } else if (user.designation === 'recruiter') {\n      setOptions(['My Dashboard', 'View Candidates', 'Logout']);\n    } else {\n      setOptions(['Logout']);\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem('isLoggedIn', 'false');\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleSearch = (e) => {\n    // You can perform any additional search-related logic here\n    if (e.key === 'Enter') {\n      // Perform any additional search-related logic here\n      navigate(`/companies?search=${encodeURIComponent(searchTerm)}`);\n    }\n  };\n\n  return (\n    <div>\n      <header >\n        <div style={{ color: \"white\", fontWeight: \"bold\" }}>EasyHire</div>\n        <nav style={{ display: \"flex\", justifyContent:\"space-evenly\"}}>\n        {isLoggedIn && location.pathname.includes('/companies')? (\n          <div className=\"searchBarContainer\" style={{ marginRight: \"200px\", marginTop:\"6px\" }}>\n            <input\n              className=\"searchBarInput\"\n              type=\"text\"\n              placeholder=\"Search jobs...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              onKeyDown={handleSearch}\n              style={{width:\"350px\", textAlign:\"center\", color:\"black\", border:\"2px solid black\"}}\n            />\n          </div>\n        ):<></>}\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/blog\">Blog</Link>\n            </li>\n            <li style={{ marginRight: \"40px\" }}>\n              <Link to=\"/fairs\">Fairs</Link>\n            </li>\n          </ul>\n          {isLoggedIn? (\n            <div>\n            <IconButton\n              class = \"three_dots\"\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls={open ? 'long-menu' : undefined}\n              aria-expanded={open ? 'true' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <MoreVertIcon style={{ color: \"white\", marginTop: \"6px\"}}/>\n            </IconButton>\n            <Menu\n              id=\"long-menu\"\n              MenuListProps={{\n                'aria-labelledby': 'long-button',\n              }}\n              anchorEl={anchorEl}\n              open={open}\n              onClose={() => handleClose('')}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: '20ch',\n                },\n              }}\n            >\n              {options.map((option) => (\n                <MenuItem key={option} selected={option === 'Pyxis'} onClick={() => handleClose(option)}>\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n          ):<ul>\n              <li\n                style={{ marginRight: \"5px\", color: \"white\", fontWeight: \"bold\" }}\n              >\n                <Link to=\"/login\"> Login |</Link>\n              </li>\n              <li style={{ fontWeight: \"bold\" }}>\n                <Link to=\"/register\"> Register</Link>\n              </li>\n          </ul>\n          }\n          \n        </nav>\n      </header>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/blog\" element={<Blog />} />\n        <Route path=\"/jobSeekerMeetings\" element={<JobSeekerMeetings id={userId} name={userName} />} />\n        <Route path='/recruiterMeetings' element={<RecruiterMeetings id={userId} name={userName} />} />\n        <Route path=\"/fairs\" element={<Fairs />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/jobSeekers\" element={<RecruiterLanding id={userId} name={userName} />} />\n        <Route path=\"/companies\" element={<JobseekerLanding searchTerm={searchTerm} email={userEmail} name={userName} id={userId} />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/EventHostDashboard\" element={<EventHostDashboard />} />\n      </Routes>\n\n      <footer>\n        <section>\n          <p> &copy; 2023 EasyHire, Inc</p>\n        </section>\n        <section>\n          <p> About Us | Directions | Contact Us</p>\n        </section>\n        <section>\n          <p> Privacy Policy </p>\n        </section>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/login.js",["108","109","110","111"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/login.css';\n\nfunction Login({ onLogin }) {\n    const navigate = useNavigate(); // Get the history object from React Router\n\n    const handleSuccessfulLogin = (user) => {\n        console.log(`Hello ${user.firstName}! You are successfully logged in!`);\n        onLogin(user);\n        if(user.designation == 'jobSeeker') {\n            console.log(\"entered successful login\");\n            navigate('/companies'); \n        }\n        else if(user.designation == 'recruiter') {\n            navigate('/jobSeekers'); \n        }\n        else if(user.designation == 'eventHost') {\n          navigate('/eventHostDashboard');\n        }\n        // Perform the routing to the 'jobSeekers' component after successful login\n    };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const loginEmail = document.getElementById(\"email-txt\").value;\n    const loginPassword = document.getElementById(\"password\").value;\n\n    // Do something with the email and password, for example, log them to the console\n    console.log(\"Email:\", loginEmail);\n    console.log(\"Password:\", loginPassword);\n\n    try {\n      const response = await fetch(\"http://localhost:4000/validate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ loginEmail, loginPassword }),\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        console.log(userData);\n        handleSuccessfulLogin(userData);\n      } else {\n        const errorMessage = await response.json();\n        alert(`Error: ${errorMessage[\"error\"]}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(`Error: ${error}`);\n    }\n  };\n\n  const handleForgotPassword = () => {\n    navigate(\"/forgot-password\"); // Navigate to the forgot password route\n  };\n\n  return (\n    <div>\n      <div className=\"login-container\">\n        <div className=\"login-card\">\n          <div className=\"login-header\">\n            <h2>Welcome Back</h2>\n          </div>\n          <form className=\"login-form\" onSubmit={handleSubmit}>\n            <input\n              type=\"email\"\n              id=\"email-txt\"\n              placeholder=\"Email Address\"\n              required\n            />\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <br />\n            <br />\n            <button type=\"submit\">LOG IN</button>\n          </form>\n          <br />\n          <a\n            href=\"#\"\n            onClick={handleForgotPassword}\n            className=\"forgot-password\"\n          >\n            FORGOT PASSWORD?\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Fairs.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Blog.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Register.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Home.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/recruiterLanding.js",["112"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport \"../css/recruiterLanding.css\";\n\nconst DisplayJobSeekers = ({name, id}) => {\n  const [users, setUsers] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [recruiter, setRecruiter] = useState({});\n  useEffect(() => {\n    // Fetch data when the component mounts\n    fetchData();\n  }, []);\n\n  const handleNext = () => {\n    if (currentIndex < users.length - 1) {\n      setCurrentIndex((prevIndex) => prevIndex + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevIndex) => prevIndex - 1);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"/jobSeekersData\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        console.log(\"userData: \" + userData);\n        setUsers(userData); // Update the state with the fetched data\n      } else {\n        const errorMessage = await response.text();\n        alert(`Error: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  \n\n  const handleAppointmentClick = async (user) => {\n    setShowPopup(true);\n\n    // console.log(\"recruiter email: \",email);\n    try {\n      const response = await fetch(`http://localhost:4000/recruiter/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      // const recruiterData = await response.json();'\n      if(response.ok) {\n        const recruiterData = await response.json();\n        setRecruiter(recruiterData);\n        console.log(\"Recruiter: \", recruiter);\n      }\n      else {\n        console.log(\"Recruiter details not fetched!\");\n      }\n    } catch (error) {\n      console.log(\"Error fetching Recruiter Data: \", error);\n    }\n    // Define emailData with the necessary information\n    const emailData = {\n      timeSlots: recruiter.timeSlots,\n      jobSeekerName: user.firstName,\n      jobSeekerEmail: user.email,\n      recruiterName: name,\n      companyName: recruiter.companyName,\n    };\n\n    // Axios POST request to send the email\n    axios.post('http://localhost:4000/send-invite', emailData)\n        .then(response => {\n            console.log('Email sent successfully:', response.data);\n            // Handle success - maybe update the state to show a success message\n        })\n        .catch(error => {\n            console.error('Error in sending email:', error);\n            // Handle error - maybe update the state to show an error message\n        });\n\n    setTimeout(() => {\n        setShowPopup(false);\n    }, 2000); // Hide popup after 2 seconds\n};\n\n  return (\n    <div class=\"recruiter-landing\">\n      <div className=\"recruiter-container\">\n        <h1>Candidate Details</h1>\n        {users.length > 0 && (\n          <div className=\"user-card\">\n            <img\n              src={`${process.env.PUBLIC_URL}/images/${users[currentIndex].firstName}.png`}\n              alt={`${users[currentIndex].firstName}'s avatar`}\n              style={{maxWidth: \"300px\" || '100%',\n              maxHeight: \"200px\" || '100%',\n              width: 'auto',\n              height: 'auto',}}\n              className=\"user-image\"\n            />\n            <div class=\"user-details\">\n              <p>Name: {users[currentIndex].firstName}</p>\n              <p>Email: {users[currentIndex].email}</p>\n              <p>Phone: {users[currentIndex].phone}</p>\n              <p>Degree: {users[currentIndex].degree}</p>\n              <p>Experience: {users[currentIndex].workExperience}</p>\n              <p>\n                Linkedin Profile URL:\n                <a\n                  href={users[currentIndex].linkedIn}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {users[currentIndex].linkedIn}\n                </a>{\" \"}\n              </p>\n            </div>\n\n            {users[currentIndex].resume && (\n              <>\n                <div className=\"btns-div\">\n                  {!showModal && (\n                    <button onClick={() => setShowModal(true)}>\n                      View Resume\n                    </button>\n                  )}\n                  {showModal && (\n                    <>\n                      <button onClick={() => setShowModal(false)}>Close</button>\n                      <div className=\"modal\">\n                        <iframe\n                          src={users[currentIndex].resume}\n                          width=\"100%\"\n                          height=\"500px\"\n                          title=\"Resume Preview\"\n                        />\n                      </div>\n                    </>\n                  )}\n                </div>\n              </>\n            )}\n\n            <button onClick={() => handleAppointmentClick(users[currentIndex])}>Make an Appointment</button>\n                        {showPopup && (\n                          <span className=\"popup\">\n                            ✔ Your meeting is scheduled.\n                          </span>\n                        )}\n\n            <div className=\"card-navigation\">\n              <button onClick={handlePrev} disabled={currentIndex === 0}>\n                Previous\n              </button>\n              <button\n                onClick={handleNext}\n                disabled={currentIndex === users.length - 1}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayJobSeekers;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/jobseekerLanding.js",["113"],[],"import React, { useState, useEffect } from 'react';\nimport SponsorsList from './SponsorsList';\nimport SponsorDetails from './SponsorDetails';\nimport '../css/jobseekerLanding.css';\n\nfunction JobseekerLanding({searchTerm, email, name, id}) {\n    const [selectedSponsor, setSelectedSponsor] = useState(null);\n\n    const [sponsors, setSponsers] = useState([]);\n\n    useEffect(() => {\n        // Fetch data when the component mounts\n        fetchData();\n    }, [searchTerm]);\n\n    const fetchData = async () => {\n        try {\n            let url = '/sponsors';\n            console.log(\"Search term: \"+searchTerm);\n\n            if (searchTerm) {\n                url += `/${encodeURIComponent(searchTerm)}`;\n            }\n\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n\n            if (response.ok) {\n                const sponsorData = await response.json();\n                setSponsers(sponsorData); // Update the state with the fetched data\n            } else {\n                const errorMessage = await response.text();\n                alert(`Error: ${errorMessage}`);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <SponsorsList sponsors={sponsors} onSelect={setSelectedSponsor} />\n            {selectedSponsor && <SponsorDetails sponsor={selectedSponsor} userEmail={email} userName={name} userId={id}/>}\n        </div>\n    );\n}\n\nexport default JobseekerLanding;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/EventHostDashboard.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/RecruiterMeetings.js",["114","115","116"],[],"import React, { useState, useEffect } from 'react';\nimport '../css/Meetings.css';\n\n  const Meeting = ({ userName, school, timeSlot, venue, email, boothNumber, onCancel }) => (\n    <div className=\"meeting\">\n      <div className=\"meeting-info\">\n        <div className=\"meeting-title\">{`Meeting with ${userName}`} / <a href=\"#\">{school} </a></div>\n        <div className=\"meeting-details\">\n          {timeSlot} / <a href={`mailto:${email}`}>{email}</a> <br></br><br></br>\n          {/* Join <a href={link} className=\"meeting-link\" target=\"_blank\" rel=\"noopener noreferrer\">Zoom Meeting</a> &nbsp;&nbsp;\n          Passcode: {passcode} */}\n          {`Location: ${venue}`}<br /><br/>\n          {`Booth No.: ${boothNumber}`}\n          <button className=\"cancel-button\" onClick={onCancel}>Cancel Meeting</button>\n        </div>\n      </div>\n    </div>\n  );\n\nconst MeetingsList = ({id}) => {\n  const [meetings, setMeetings] = useState([]);\n  console.log(id);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/recruiterMeetings/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n        }\n      });\n\n      if(response.ok) {\n        setMeetings(await response.json());\n      } else {\n        console.log(\"Meetings not found!!\");\n      }\n   } catch(e) {\n      console.log(\"Error: \" + e);\n   }\n  }\n\n  useEffect(() => {\n    fetchData();\n  },[]);\n\n  const cancelMeeting = async(meetingId) => {\n    try {\n      const response = await fetch(`http://localhost:4000/deleteRecruiterMeeting/${meetingId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n        }\n      });\n\n      if(response.ok) {\n        console.log(\"Deleted meeting: \", response.json());\n        fetchData();\n      } else {\n        console.log(\"Meetings not found!!\");\n      }\n   } catch(e) {\n      console.log(\"Error: \" + e);\n   }\n  };\n\n  return (\n    <div className=\"meetings\">\n      <h1>My Meetings</h1>\n      <p>View and Edit your personal meetings. <a href=\"#\">Learn More</a></p>\n      <div className=\"meetings-list\">\n        {meetings.map((meeting, index) => (\n          <Meeting key={index} {...meeting} onCancel={() => cancelMeeting(meeting._id)} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MeetingsList;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/ForgotPassword.js",[],[],"/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/JobseekerMeetings.js",["117","118","119"],[],"import React, { useState, useEffect } from 'react';\nimport '../css/Meetings.css';\n\n\nconst Meeting = ({ firstName, lastName, company, timeSlot, venue, email, boothNumber, onCancel }) => (\n  <div className=\"meeting\">\n    <div className=\"meeting-info\">\n      <div className=\"meeting-title\">{`Meeting with ${firstName} ${lastName}`} / <a href=\"#\">{company} </a></div>\n      <div className=\"meeting-details\">\n        {timeSlot} / <a href={`mailto:${email}`}>{email}</a> <br></br><br></br>\n        {/* Join <a href={link} className=\"meeting-link\" target=\"_blank\" rel=\"noopener noreferrer\">Zoom Meeting</a> &nbsp;&nbsp;\n        Passcode: {passcode} */}\n        {`Location: ${venue}`}<br /><br/>\n        {`Booth No.: ${boothNumber}`}\n        <button className=\"cancel-button\" onClick={onCancel}>Cancel Meeting</button>\n      </div>\n    </div>\n  </div>\n);\n\nconst MeetingsList = ({id}) => {\n  const [meetings, setMeetings] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/jobSeekerMeetings/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n        }\n      });\n\n      if(response.ok) {\n        setMeetings(await response.json());\n      } else {\n        console.log(\"Meetings not found!!\");\n      }\n   } catch(e) {\n      console.log(\"Error: \" + e);\n   }\n  }\n\n  useEffect(() => {\n    fetchData();\n  },[]);\n  \n\n  const cancelMeeting = async (meetingId) => {\n    // const newMeetings = meetings.filter((_, i) => i !== index);\n    try {\n      const response = await fetch(`http://localhost:4000/deleteJobSeekerMeeting/${meetingId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n        }\n      });\n\n      if(response.ok) {\n        console.log(\"Deleted meeting: \", response.json());\n        fetchData();\n      } else {\n        console.log(\"Meetings not found!!\");\n      }\n   } catch(e) {\n      console.log(\"Error: \" + e);\n   }\n  };\n\n  return (\n    <div className=\"meetings\">\n      <h1>My Meetings</h1>\n      <p>View and Edit your personal meetings. <a href=\"#\">Learn More</a></p>\n      <div className=\"meetings-list\">\n        {meetings.map((meeting, index) => (\n          <Meeting key={index} {...meeting} onCancel={() => cancelMeeting(meeting._id)} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MeetingsList;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Candidateform.js",["120","121"],[],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-use-history\";\nimport \"../css/Candidateform.css\";\n\nfunction CandidateForm() {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    degree: \"\",\n    workExperience: \"\",\n    skillset: \"\",\n    linkedIn: \"\",\n    resume:\n      \"https://drive.google.com/file/d/1jhPg_R_dyx8HRx11dhcdazAHQqGUGpa5/preview\",\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const postFormData = async (formData) => {\n    // const firstName = formData.firstName;\n    console.log(\"formData: \" + formData);\n    // JSON.stringify(formData);\n\n    try {\n      const dataToSend = { ...formData, designation: \"Job Seeker\" };\n      const response = await fetch(\"/addJobSeeker\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n\n      if (response.ok) {\n        alert(`Registration Successful`);\n      } else {\n        const errorMessage = await response.json();\n        alert(`Error: ${errorMessage[\"error\"]}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(`Error: ${error}`);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setFormData({ ...formData, resume: file });\n      setErrors({ ...errors, resume: null });\n    } else {\n      setErrors({ ...errors, resume: \"Only PDF files are allowed.\" });\n    }\n  };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n\n    // Simple validations (you can expand upon these)\n    if (!formData.firstName) tempErrors.firstName = \"First name is required.\";\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required.\";\n    if (!formData.email.includes(\"@\")) tempErrors.email = \"Email is invalid.\";\n    if (formData.password.length < 8)\n      tempErrors.password = \"Password should be at least 8 characters.\";\n    if (formData.password !== formData.confirmPassword)\n      tempErrors.confirmPassword = \"Passwords do not match.\";\n    if (formData.phone.length < 10)\n      tempErrors.phone = \"Please enter a valid phone number.\";\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log(\"Form data submitted:\", formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        console.log(\"Form data submitted:\", formData);\n        postFormData(formData);\n        // Clear the form\n        setFormData({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          phone: \"\",\n          degree: \"\",\n          workExperience: \"\",\n          skillset: \"\",\n          linkedIn: \"\",\n          resume: null,\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {\n          submissionStatus && (\n            <div className=\"submission-status\">{submissionStatus}</div>\n          );\n        }\n        // Process your form data here (e.g., send to an API)\n        history.push(\"/login\");\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name=\"firstName\"\n        placeholder=\"First Name\"\n        onChange={handleInputChange}\n      />\n      {errors.firstName && <div>{errors.firstName}</div>}\n\n      <input\n        name=\"lastName\"\n        placeholder=\"Last Name\"\n        onChange={handleInputChange}\n      />\n      {errors.lastName && <div>{errors.lastName}</div>}\n\n      <input name=\"email\" placeholder=\"Email ID\" onChange={handleInputChange} />\n      {errors.email && <div>{errors.email}</div>}\n\n      <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={handleInputChange}\n      />\n      {errors.password && <div>{errors.password}</div>}\n\n      <input\n        type=\"password\"\n        name=\"confirmPassword\"\n        placeholder=\"Re-enter Password\"\n        onChange={handleInputChange}\n      />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n      <input\n        type=\"phone\"\n        name=\"phone\"\n        placeholder=\"Phone number\"\n        onChange={handleInputChange}\n      />\n      {errors.phone && <div>{errors.phone}</div>}\n      <input name=\"degree\" placeholder=\"Degree\" onChange={handleInputChange} />\n      <textarea\n        name=\"skillset\"\n        placeholder=\"Eg: Java, Python, SQL server.....\"\n        onChange={handleInputChange}\n      ></textarea>\n      <textarea\n        name=\"workExperience\"\n        placeholder=\"Work Experience (if any)\"\n        onChange={handleInputChange}\n      ></textarea>\n      <textarea\n        name=\"linkedIn\"\n        placeholder=\"Linkedin Profile URL\"\n        onChange={handleInputChange}\n      ></textarea>\n\n      <input type=\"file\" onChange={handleFileChange} />\n      {errors.resume && <div>{errors.resume}</div>}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default CandidateForm;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/Recruiterform.js",["122","123"],[],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-use-history';\nimport '../css/Candidateform.css';\n\nfunction Recruiterform() {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    companyName: '',\n  });\n\n  useEffect(() => {\n    // You can perform actions after the state has been updated, for instance:\n    console.log('Form data has been cleared:', formData);\n  }, [formData]); // Watching for changes in formData\n\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type === 'application/pdf') {\n//       setFormData({ ...formData, resume: file });\n//       setErrors({ ...errors, resume: null });\n//     } else {\n//       setErrors({ ...errors, resume: 'Only PDF files are allowed.' });\n//     }\n//   };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n\n    \n    if (!formData.firstName) tempErrors.firstName = 'First name is required.';\n    if (!formData.lastName) tempErrors.lastName = 'Last name is required.';\n    if (!formData.email.includes('@')) tempErrors.email = 'Email is invalid.';\n    if (formData.password.length < 8) tempErrors.password = 'Password should be at least 8 characters.';\n    if (formData.password !== formData.confirmPassword) tempErrors.confirmPassword = 'Passwords do not match.';\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const postFormData = async (formData) => {\n    // const firstName = formData.firstName;\n    console.log(\"formData: \" + formData);\n    // JSON.stringify(formData);\n\n    try {\n      const dataToSend = { ...formData, designation: \"recruiter\" };\n        const response = await fetch('/addRecruiter', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( dataToSend )\n        });\n\n        if (response.ok) {\n            alert(`Registration Successful`);\n        } else {\n            const errorMessage = await response.json();\n            alert(`Error: ${errorMessage[\"error\"]}`);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert(`Error: ${error}`);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log('Form data submitted:', formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        await postFormData(formData);\n        console.log('Form data submitted:', formData);\n        // Clear the form\n        setFormData({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            companyName:'',\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {submissionStatus && <div className=\"submission-status\">{submissionStatus}</div>}\n        history.push('/login'); \n        // Process your form data here (e.g., send to an API)\n        \n        \n    }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"firstName\" placeholder=\"First Name\" onChange={handleInputChange} />\n      {errors.firstName && <div>{errors.firstName}</div>}\n\n      <input name=\"lastName\" placeholder=\"Last Name\" onChange={handleInputChange} />\n      {errors.lastName && <div>{errors.lastName}</div>}\n\n      <input name=\"email\" placeholder=\"Email ID\" onChange={handleInputChange} />\n      {errors.email && <div>{errors.email}</div>}\n\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleInputChange} />\n      {errors.password && <div>{errors.password}</div>}\n\n      <input type=\"password\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" onChange={handleInputChange} />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n      <input type=\"companyName\" name=\"companyName\" placeholder=\"Company Name\" onChange={handleInputChange} />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n\n      {/* <input name=\"degree\" placeholder=\"Degree\" onChange={handleInputChange} /> */}\n\n      {/* <textarea name=\"workExperience\" placeholder=\"Work Experience (if any)\" onChange={handleInputChange}></textarea> */}\n\n      {/* <input type=\"file\" onChange={handleFileChange} />\n      {errors.resume && <div>{errors.resume}</div>} */}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default Recruiterform;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/SponsorDetails.js",["124"],[],"import React, { useState, useEffect} from 'react';\nimport '../css/SponsorDetails.css';\nimport axios from 'axios';\n\n\nfunction SponsorDetails({sponsor, userEmail, userName, userId}) {\n    const { name, role, jobId, description, requirements, prefered, boothNum } = sponsor;\n    const requirementItems = requirements.split('.').filter(item => item.trim() !== '');\n    const preferedItems = prefered.split('.').filter(item => item.trim() !== '');\n    const [showMeetingInfo, setShowMeetingInfo] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    const [recruiterData1, setRecruiterData1] = useState(null);\n\n    \n    // Function to reset the showTimeslot state\n  const resetShowTimeslot = () => {\n    setShowMeetingInfo(false);\n    setShowPopup(false);\n  };\n\n  // Call the reset function when navigating to a new job opening\n  useEffect(() => {\n    resetShowTimeslot();\n  }, [jobId]); // Assuming jobId uniquely identifies a job opening\n\n\n    useEffect(() => {\n        setRecruiterData1('');\n        const fetchData = async (setDataFunction) => {\n          try {\n            // Replace with your API endpoint for fetching recruiter data\n            const response = await axios.get(`/recruiters/${name}`);\n            if(response.status === 200) {\n                setDataFunction(response.data);\n            } else {\n                console.log(\"Error occured!!!\");\n            }\n          } catch (error) {\n            console.error('Error fetching recruiter data:', error);\n          }\n        };\n    \n        if (showMeetingInfo) {\n          fetchData(setRecruiterData1);\n        //   fetchData(recruiter2, setRecruiterData2);\n        }\n      }, [showMeetingInfo]);\n\n    const handleAppointmentClick = (timeSlot) => {\n        setShowPopup(true);\n        \n        // Define emailData with the necessary information\n        const emailData = {\n            userEmail: userEmail, \n            meetingDetails: timeSlot,\n            recruiterName: recruiterData1.firstName + \" \" + recruiterData1.lastName,\n            companyName: name,\n            boothNumber: boothNum,\n            userName: userName,\n            recruiterEmail: recruiterData1.email\n        };\n    \n        // Axios POST request to send the email\n        axios.post('http://localhost:4000/send-email', emailData)\n            .then(response => {\n                console.log('Email sent successfully:', response.data);\n                // Handle success - maybe update the state to show a success message\n            })\n            .catch(error => {\n                console.error('Error in sending email:', error);\n                // Handle error - maybe update the state to show an error message\n            });\n\n        const meetingData = {\n          timeSlot: timeSlot,\n          firstName: recruiterData1.firstName,\n          lastName: recruiterData1.lastName,\n          venue: 'Squires CommonWealth Ballroom',\n          email: recruiterData1.email,\n          jobSeeker: userId,\n          boothNumber: boothNum,\n          company: name\n        }\n        \n        axios.post('http://localhost:4000/addJobSeekerMeeting',meetingData)\n          .then(response => {\n            console.log('Added Data successfully!', response.data);\n          })\n          .catch(error => {\n            console.log('Error Adding data: ', error);\n          });\n\n          const recruiterMeetingData = {\n            timeSlot: timeSlot,\n            userName: userName,\n            venue: 'Squires CommonWealth Ballroom',\n            email: userEmail,\n            recruiter: recruiterData1._id,\n            boothNumber: boothNum,\n            school: 'Virginia Tech'\n          }\n\n        axios.post('http://localhost:4000/addRecruiterMeeting',recruiterMeetingData)\n          .then(response => {\n            console.log('Added Data successfully!', response.data);\n          })\n          .catch(error => {\n            console.log('Error Adding data: ', error);\n          });\n\n        setTimeout(() => {\n            setShowPopup(false);\n        }, 2000); // Hide popup after 2 seconds\n    };\n    \n\n    return (\n        <div className=\"sponsorDetails\">\n            <h1>{role}</h1>\n            <p><strong>About Us</strong><br></br><br></br>{description}</p>\n            <strong>Key Requirements</strong>\n            <ul>\n                    {requirementItems.map((item, index) => (\n                        <li key={index}>{item.trim()}</li>\n                    ))}\n            </ul>\n            <strong>Prefered Qualifications</strong>\n            <ul>\n                    {preferedItems.map((item, index) => (\n                        <li key={index}>{item.trim()}</li>\n                    ))}\n            </ul>\n\n            <p><strong>Job Id:  </strong>{jobId}</p>\n            \n\n            <div className=\"meetingToggle\" onClick={() => setShowMeetingInfo(!showMeetingInfo)}>\n                <span className=\"clockIcon\">🕐</span>\n                <span>Ready to meet with a recruiter?</span>\n                <span className=\"dropdownArrow\">{showMeetingInfo ? '▲' : '▼'}</span>\n            </div>\n            {showMeetingInfo && recruiterData1 && (\n                <div className=\"meetingInfo\">\n                {recruiterData1.timeSlots.map((timeSlot, index) => (\n                  <div key={index} className=\"timeSlotInfo\" style={{ display: \"flex\" }}>\n                    <div className=\"leftInfo\">\n                      <div className=\"dateInfo\">\n                        <h3>Schedule Time</h3>\n                        <h4>{timeSlot}</h4>\n                      </div>\n                      {/* Additional information or components can be added here */}\n                    </div>\n                    <div className=\"rightInfo\">\n                      <div className=\"recruiterInfo\">\n                        <h3>Assigned Recruiter</h3>\n                        <h4>{recruiterData1.firstName + \" \" + recruiterData1.lastName}</h4>\n                      </div>\n                      <div className=\"availableSlots\"> \n                        <button onClick={() => handleAppointmentClick(timeSlot)}>Make an Appointment</button>\n                        {showPopup && (\n                          <span className=\"popup\">\n                            ✔ Your meeting is scheduled.\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n        </div>\n        \n    );\n}\n\nexport default SponsorDetails;\n","/Users/sushmadeegoju/Documents/3rd_sem/capstone/project/EasyHire-CareerFairPlatform/src/frontend/components/SponsorsList.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":35,"column":28,"nodeType":"127","messageId":"128","endLine":35,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":37,"column":33,"nodeType":"127","messageId":"128","endLine":37,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":60,"column":10,"nodeType":"131","messageId":"132","endLine":60,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":70,"column":21,"nodeType":"127","messageId":"128","endLine":70,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":72,"column":28,"nodeType":"127","messageId":"128","endLine":72,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":94,"column":21,"nodeType":"127","messageId":"128","endLine":94,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":96,"column":28,"nodeType":"127","messageId":"128","endLine":96,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":11,"column":29,"nodeType":"127","messageId":"128","endLine":11,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":15,"column":34,"nodeType":"127","messageId":"128","endLine":15,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":18,"column":34,"nodeType":"127","messageId":"128","endLine":18,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":85,"column":11,"nodeType":"135","endLine":89,"endColumn":12},{"ruleId":"129","severity":1,"message":"136","line":9,"column":9,"nodeType":"131","messageId":"132","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":14,"column":8,"nodeType":"139","endLine":14,"endColumn":20,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"134","line":7,"column":71,"nodeType":"135","endLine":7,"endColumn":83},{"ruleId":"137","severity":1,"message":"138","line":45,"column":5,"nodeType":"139","endLine":45,"endColumn":7,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"134","line":70,"column":48,"nodeType":"135","endLine":70,"endColumn":60},{"ruleId":"133","severity":1,"message":"134","line":8,"column":82,"nodeType":"135","endLine":8,"endColumn":94},{"ruleId":"137","severity":1,"message":"138","line":45,"column":5,"nodeType":"139","endLine":45,"endColumn":7,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"134","line":72,"column":48,"nodeType":"135","endLine":72,"endColumn":60},{"ruleId":"129","severity":1,"message":"143","line":67,"column":28,"nodeType":"131","messageId":"132","endLine":67,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":110,"column":9,"nodeType":"146","messageId":"147","endLine":114,"endColumn":10},{"ruleId":"129","severity":1,"message":"143","line":40,"column":28,"nodeType":"131","messageId":"132","endLine":40,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":101,"column":9,"nodeType":"146","messageId":"147","endLine":101,"endColumn":90},{"ruleId":"137","severity":1,"message":"148","line":47,"column":10,"nodeType":"139","endLine":47,"endColumn":27,"suggestions":"149"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'userPassword' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["150"],["151"],["152"],"'setSubmissionStatus' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["153"],{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [fetchData, searchTerm]",{"range":"161","text":"162"},"Update the dependencies array to be: [fetchData]",{"range":"163","text":"164"},{"range":"165","text":"164"},"Update the dependencies array to be: [name, showMeetingInfo]",{"range":"166","text":"167"},[456,468],"[fetchData, searchTerm]",[1421,1423],"[fetchData]",[1399,1401],[1671,1688],"[name, showMeetingInfo]"]